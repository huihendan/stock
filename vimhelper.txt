# Vim Golang 开发完整指导手册

## 一、环境配置确认

### 1. 检查 Go 版本
```bash
go version
```

### 2. 检查 GOPATH 和 GOROOT
```bash
go env GOPATH
go env GOROOT
```

## 二、Vim 插件配置 (假设已安装)

### 主要 Golang 插件
- **vim-go**: 最重要的 Go 开发插件
- **YouCompleteMe** 或 **coc.nvim**: 代码补全
- **NERDTree**: 文件浏览
- **tagbar**: 代码结构浏览

## 三、Vim-Go 核心快捷键

### 基础导航
| 快捷键 | 功能 |
|--------|------|
| `gd` | 跳转到定义 |
| `Ctrl-o` | 返回上一个位置 |
| `Ctrl-i` | 前进到下一个位置 |
| `:GoDoc` | 查看文档 |
| `:GoInfo` | 查看函数签名 |

### 代码编辑
| 快捷键 | 功能 |
|--------|------|
| `:GoFmt` | 格式化代码 |
| `:GoImports` | 自动导入包 |
| `:GoRename` | 重命名变量/函数 |
| `:GoFillStruct` | 自动填充结构体字段 |
| `:GoAddTags` | 添加 struct tags |

### 代码生成
| 快捷键 | 功能 |
|--------|------|
| `:GoImpl` | 实现接口 |
| `:GoKeyify` | 转换为 keyed struct literal |
| `:GoFreevars` | 提取自由变量 |

### 测试相关
| 快捷键 | 功能 |
|--------|------|
| `:GoTest` | 运行当前包测试 |
| `:GoTestFunc` | 运行当前函数测试 |
| `:GoCoverage` | 显示测试覆盖率 |
| `:GoAlternate` | 在源文件和测试文件间切换 |

### 构建和运行
| 快捷键 | 功能 |
|--------|------|
| `:GoBuild` | 构建项目 |
| `:GoRun` | 运行当前文件 |
| `:GoInstall` | 安装包 |

## 四、常用 Vim 快捷键

### 移动和导航
| 快捷键 | 功能 |
|--------|------|
| `h/j/k/l` | 左/下/上/右移动 |
| `w` | 移动到下一个单词开头 |
| `b` | 移动到上一个单词开头 |
| `e` | 移动到当前单词结尾 |
| `0` | 移动到行首 |
| `$` | 移动到行尾 |
| `^` | 移动到行首第一个非空字符 |
| `gg` | 移动到文件开头 |
| `G` | 移动到文件结尾 |
| `Ctrl-f` | 向下翻页 |
| `Ctrl-b` | 向上翻页 |
| `Ctrl-d` | 向下翻半页 |
| `Ctrl-u` | 向上翻半页 |
| `{` | 移动到上一个段落 |
| `}` | 移动到下一个段落 |
| `%` | 在匹配的括号之间跳转 |

### 编辑模式
| 快捷键 | 功能 |
|--------|------|
| `i` | 在光标前插入 |
| `a` | 在光标后插入 |
| `I` | 在行首插入 |
| `A` | 在行尾插入 |
| `o` | 在下方新建行并插入 |
| `O` | 在上方新建行并插入 |
| `s` | 删除当前字符并插入 |
| `S` | 删除当前行并插入 |
| `Esc` | 退出插入模式 |

### 删除和修改
| 快捷键 | 功能 |
|--------|------|
| `x` | 删除当前字符 |
| `X` | 删除前一个字符 |
| `dd` | 删除当前行 |
| `dw` | 删除到下个单词 |
| `d$` | 删除到行尾 |
| `d0` | 删除到行首 |
| `cw` | 修改到下个单词 |
| `cc` | 修改整行 |
| `C` | 修改到行尾 |
| `r` | 替换当前字符 |
| `R` | 进入替换模式 |

### 复制和粘贴
| 快捷键 | 功能 |
|--------|------|
| `yy` | 复制当前行 |
| `yw` | 复制到下个单词 |
| `y$` | 复制到行尾 |
| `p` | 在光标后粘贴 |
| `P` | 在光标前粘贴 |
| `"ay` | 复制到寄存器 a |
| `"ap` | 从寄存器 a 粘贴 |

### 撤销和重做
| 快捷键 | 功能 |
|--------|------|
| `u` | 撤销 |
| `Ctrl-r` | 重做 |
| `.` | 重复上一个命令 |

### 代码补全 (YouCompleteMe/内置)
| 快捷键 | 功能 |
|--------|------|
| `Ctrl-n` | 下一个补全选项 |
| `Ctrl-p` | 上一个补全选项 |
| `Ctrl-x Ctrl-o` | 全能补全 |
| `Ctrl-x Ctrl-f` | 文件名补全 |
| `Ctrl-x Ctrl-l` | 行补全 |
| `Tab` | 接受当前补全项 |
| `Enter` | 接受当前补全项 |

### 文件操作
| 快捷键 | 功能 |
|--------|------|
| `:e filename` | 打开文件 |
| `:w` | 保存 |
| `:w filename` | 另存为 |
| `:q` | 退出 |
| `:wq` | 保存并退出 |
| `:q!` | 强制退出不保存 |
| `:x` | 保存并退出 (等同于:wq) |
| `Ctrl-o` | 跳转到上一个位置 |
| `Ctrl-i` | 跳转到下一个位置 |

### 窗口和标签管理
| 快捷键 | 功能 |
|--------|------|
| `:sp` | 水平分割窗口 |
| `:vsp` | 垂直分割窗口 |
| `Ctrl-w h/j/k/l` | 窗口间移动 |
| `Ctrl-w c` | 关闭当前窗口 |
| `Ctrl-w q` | 退出当前窗口 |
| `Ctrl-w =` | 均分窗口大小 |
| `Ctrl-w +/-` | 调整窗口高度 |
| `Ctrl-w >/< ` | 调整窗口宽度 |
| `:tabnew` | 新建标签页 |
| `:tabc` | 关闭标签页 |
| `gt` | 下一个标签页 |
| `gT` | 上一个标签页 |

### 搜索和替换
| 快捷键 | 功能 |
|--------|------|
| `/pattern` | 向前搜索 |
| `?pattern` | 向后搜索 |
| `n` | 下一个匹配 |
| `N` | 上一个匹配 |
| `*` | 搜索当前单词 |
| `#` | 反向搜索当前单词 |
| `:%s/old/new/g` | 全文替换 |
| `:%s/old/new/gc` | 全文替换(确认) |
| `:s/old/new/g` | 当前行替换 |
| `:noh` | 取消高亮搜索结果 |

### 文本对象
| 快捷键 | 功能 |
|--------|------|
| `diw` | 删除单词 |
| `ciw` | 修改单词 |
| `yiw` | 复制单词 |
| `di"` | 删除引号内容 |
| `ci"` | 修改引号内容 |
| `yi"` | 复制引号内容 |
| `di(` | 删除括号内容 |
| `ci(` | 修改括号内容 |
| `yi(` | 复制括号内容 |
| `dip` | 删除段落 |
| `cip` | 修改段落 |
| `yip` | 复制段落 |

### 宏录制
| 快捷键 | 功能 |
|--------|------|
| `qa` | 开始录制宏到寄存器 a |
| `q` | 停止录制宏 |
| `@a` | 执行宏 a |
| `@@` | 重复执行上一个宏 |
| `10@a` | 执行宏 a 十次 |

### 折叠
| 快捷键 | 功能 |
|--------|------|
| `zf` | 创建折叠 |
| `zo` | 打开折叠 |
| `zc` | 关闭折叠 |
| `za` | 切换折叠状态 |
| `zR` | 打开所有折叠 |
| `zM` | 关闭所有折叠 |

### 书签
| 快捷键 | 功能 |
|--------|------|
| `ma` | 设置书签 a |
| `'a` | 跳转到书签 a |
| `:marks` | 显示所有书签 |

## 五、项目编译和运行

### 1. 编译整个项目
```bash
# 在项目根目录
go build -o stockServer .
```

### 2. 运行项目
```bash
# 直接运行
go run stockServer.go

# 或运行编译后的可执行文件
./stockServer
```

### 3. 运行测试
```bash
# 运行所有测试
go test ./...

# 运行特定包测试
go test ./stockData

# 运行特定测试函数
go test -run TestFunctionName ./packageName
```

### 4. 在 Vim 中的快速操作
```vim
# 编译当前项目 (在 main 包中)
:!go build -o stockServer .

# 运行项目
:!go run stockServer.go

# 运行当前包测试
:GoTest

# 格式化并保存
:GoFmt | :w
```

## 六、调试技巧

### 1. 使用 fmt 调试
```go
fmt.Printf("Debug: %+v\n", variable)
```

### 2. 使用 log 包
```go
log.Printf("Debug info: %v", data)
```

### 3. 在 Vim 中查看错误
```vim
:copen    " 打开错误列表
:cnext    " 下一个错误
:cprev    " 上一个错误
```

## 七、高效开发工作流

### 1. 打开项目
```bash
cd /root/gits/stock-go
vim stockServer.go
```

### 2. 文件导航
```vim
:NERDTree           " 打开文件树
:Tagbar             " 打开函数列表
:GoDecls            " 快速跳转到声明
:GoDeclsDir         " 浏览当前目录声明
```

### 3. 代码编写流程
1. 编写代码
2. `:GoFmt` 格式化
3. `:GoImports` 整理导入
4. `:GoBuild` 检查语法
5. `:GoTest` 运行测试
6. `:w` 保存

### 4. 常用命令组合
```vim
# 保存并运行
:w | !go run %

# 格式化、保存并测试
:GoFmt | :w | :GoTest

# 构建并运行
:GoBuild | !./stockServer
```

## 八、模块管理

### 1. 初始化模块 (如果需要)
```bash
go mod init module-name
```

### 2. 添加依赖
```bash
go get package-name
```

### 3. 整理模块
```bash
go mod tidy
```

## 九、性能优化命令

### 1. 生成性能报告
```bash
go test -cpuprofile=cpu.prof -memprofile=mem.prof -bench=.
```

### 2. 查看性能报告
```bash
go tool pprof cpu.prof
```

## 十、高级 Vim 技巧和实用组合键

### 高效编辑技巧
| 快捷键组合 | 功能 |
|------------|------|
| `Ctrl-a` | 增加数字 |
| `Ctrl-x` | 减少数字 |
| `>>` | 向右缩进当前行 |
| `<<` | 向左缩进当前行 |
| `=G` | 格式化到文件末尾 |
| `gg=G` | 格式化整个文件 |
| `J` | 合并下一行 |
| `gJ` | 合并下一行(不加空格) |
| `~` | 切换字符大小写 |
| `gU` | 转换为大写 |
| `gu` | 转换为小写 |

### 快速选择
| 快捷键 | 功能 |
|--------|------|
| `v` | 进入可视模式 |
| `V` | 进入行可视模式 |
| `Ctrl-v` | 进入块可视模式 |
| `gv` | 重新选择上次选择的文本 |
| `vaw` | 选择一个单词 |
| `vap` | 选择一个段落 |
| `va"` | 选择引号及内容 |
| `vi"` | 选择引号内容 |

### 多行编辑 (块模式)
| 快捷键 | 功能 |
|--------|------|
| `Ctrl-v` | 进入块选择模式 |
| `I` | 在块开头插入 |
| `A` | 在块结尾插入 |
| `c` | 修改选中的块 |
| `r` | 替换选中的块 |

### 命令行模式技巧
| 快捷键 | 功能 |
|--------|------|
| `:!command` | 执行外部命令 |
| `:r !command` | 插入命令输出 |
| `:w !sudo tee %` | 以 sudo 权限保存 |
| `!!` | 重复上一个外部命令 |
| `:history` | 查看命令历史 |
| `q:` | 打开命令行历史窗口 |
| `q/` | 打开搜索历史窗口 |

### 寄存器操作
| 快捷键 | 功能 |
|--------|------|
| `:reg` | 查看所有寄存器 |
| `"0p` | 粘贴最近复制的内容 |
| `"+y` | 复制到系统剪贴板 |
| `"+p` | 从系统剪贴板粘贴 |
| `"*y` | 复制到选择缓冲区 |
| `"*p` | 从选择缓冲区粘贴 |

### 跳转和导航
| 快捷键 | 功能 |
|--------|------|
| `Ctrl-]` | 跳转到标签定义 |
| `Ctrl-t` | 返回标签栈 |
| `g;` | 跳转到上一次编辑位置 |
| `g,` | 跳转到下一次编辑位置 |
| `''` | 跳转到上一个位置 |
| `'.` | 跳转到最后编辑的位置 |
| `:ju` | 显示跳转列表 |

### 会话管理
| 命令 | 功能 |
|------|------|
| `:mks session.vim` | 保存会话 |
| `:source session.vim` | 加载会话 |
| `vim -S session.vim` | 启动时加载会话 |

### 实用命令组合
| 组合 | 功能 |
|------|------|
| `:g/pattern/d` | 删除匹配的行 |
| `:v/pattern/d` | 删除不匹配的行 |
| `:g/^$/d` | 删除空行 |
| `:%s/\s\+$//g` | 删除行尾空格 |
| `:retab` | 转换 tab 为 space |
| `:set paste` | 进入粘贴模式 |
| `:set nopaste` | 退出粘贴模式 |

### NERDTree 快捷键
| 快捷键 | 功能 |
|--------|------|
| `o` | 打开/关闭文件夹 |
| `t` | 在新标签页打开 |
| `i` | 水平分割打开 |
| `s` | 垂直分割打开 |
| `p` | 跳转到父节点 |
| `P` | 跳转到根节点 |
| `r` | 刷新当前目录 |
| `R` | 刷新根目录 |
| `m` | 显示菜单 |
| `?` | 显示帮助 |

### Tagbar 快捷键
| 快捷键 | 功能 |
|--------|------|
| `Enter` | 跳转到标签 |
| `p` | 预览标签 |
| `o` | 在新窗口打开 |
| `t` | 在新标签页打开 |
| `s` | 排序切换 |
| `x` | 展开/收缩 |
| `+` | 展开所有 |
| `-` | 收缩所有 |
| `*` | 展开当前标签 |
| `=` | 收缩当前标签 |

### 调试和错误处理
| 快捷键 | 功能 |
|--------|------|
| `:copen` | 打开错误列表 |
| `:cclose` | 关闭错误列表 |
| `:cnext` | 下一个错误 |
| `:cprev` | 上一个错误 |
| `:cfirst` | 第一个错误 |
| `:clast` | 最后一个错误 |
| `:cc n` | 跳转到第 n 个错误 |

### Go 特定快捷键映射建议
```vim
" 在 .vimrc 中添加这些映射
map <C-n> :cnext<CR>
map <C-m> :cprevious<CR>
nnoremap <leader>a :cclose<CR>
autocmd FileType go nmap <leader>b <Plug>(go-build)
autocmd FileType go nmap <leader>r <Plug>(go-run)
autocmd FileType go nmap <leader>t <Plug>(go-test)
```

### 效率提升技巧
1. **使用 leader 键**：设置 `let mapleader = ","`
2. **自定义映射**：为常用命令创建快捷键
3. **使用缩写**：`:iab gop package main`
4. **开启行号**：`:set number` 或 `:set relativenumber`
5. **语法高亮**：`:syntax on`
6. **自动缩进**：`:set autoindent`